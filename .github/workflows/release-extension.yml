name: Release Plasmo Extension

on:
  push:
    tags:
      - 'v*' # Trigger workflow on tags like v1.0, v2.1.3, etc.

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed to create a release and upload assets

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build the extension with Plasmo
        run: pnpm plasmo build --zip

      - name: Unzip the extension for packaging
        run: unzip ./build/chrome-mv3-archive.zip -d ./build/chrome-mv3-unzipped

      - name: Get Version from Tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      # --- Start of New Packaging Steps ---
      - name: Install Google Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      - name: Write Private Key to file
        run: echo "${{ secrets.EXTENSION_PRIVATE_KEY }}" > key.pem
        shell: bash

      - name: Package Extension using Google Chrome CLI
        run: |
          # The output .crx file will be created in the parent directory (`./build`)
          /usr/bin/google-chrome --pack-extension=./build/chrome-mv3-unzipped --pack-extension-key=key.pem
          
      - name: Rename CRX file
        run: mv ./build/chrome-mv3-unzipped.crx extension.crx
      # --- End of New Packaging Steps ---

      - name: Generate update.xml
        run: |
          CRX_URL="https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/extension.crx"
          sed -e "s|{{extension_id}}|${{ secrets.EXTENSION_ID }}|g" \
              -e "s|{{crx_url}}|${CRX_URL}|g" \
              -e "s|{{version}}|${{ env.VERSION }}|g" \
              update.xml.template > update.xml

      - name: Create GitHub Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            extension.crx
            update.xml
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: "New release of the extension."
          prerelease: false